name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12.3

    - name: Upgrade pip and install setuptools
      run: |
        python -m pip install --upgrade pip==21.2.4
        # pip install setuptools<72.0.0
        # pip install autobahn
        # pip install autobahn==23.6.1

    - name: Install dependencies
      run: |
        # python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        # python manage.py test

    - name: Deploy to VPS
      env:
        BACKEND_USER: backend
        BACKEND_PASSWORD: backend
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: "172.188.217.99"
        PORT: "8001"
        USER: "azure"
        PROJECT_FOLDER: "/home/nirbhay/nirbhay_vrit/vrit-system/"

      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # Install rsync
        #sudo apt-get install -y rsync

        # Create necessary directories on the server
        echo "Create necessary directories on the server"
        # ssh -o StrictHostKeyChecking=no $USER@$SERVER_IP "sudo apt-get install -y python3-venv"
        ssh -o StrictHostKeyChecking=no $USER@$SERVER_IP "mkdir -p $PROJECT_FOLDER"


        # Use rsync to copy only changed files
        echo "Use rsync to copy only changed files"
        # rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e "ssh -o StrictHostKeyChecking=no" ./ $USER@$SERVER_IP:$PROJECT_FOLDER/
        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' --exclude='*.pyc' --no-times --no-perms --no-owner --no-group --chmod=D755,F644 -e "ssh -o StrictHostKeyChecking=no" ./ $USER@$SERVER_IP:$PROJECT_FOLDER/

        #copy and replace all files to cicd folder
        #scp -r -o StrictHostKeyChecking=no ./* $USER@$SERVER_IP:$PROJECT_FOLDER/

        # Run deployment commands on the server
        echo "Running deployment commands on the server"
        ssh -o StrictHostKeyChecking=no $USER@$SERVER_IP "cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install --upgrade -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput"
        
        #echo "Running deployment commands on the server" &&
        # ssh -o StrictHostKeyChecking=no $USER@$SERVER_IP "cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install --upgrade -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'"

#AmazonEC2FullAccess