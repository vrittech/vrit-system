{
    "sourceFile": "forms/tasks.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1731649483809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731670502280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,42 @@\n from celery import shared_task\n+from .models import Blog\n from django.utils.timezone import now\n-from .models import Forms\n import logging\n \n logger = logging.getLogger(__name__)\n \n @shared_task\n-def auto_expire_forms():\n-    today = now().date()  # Get the current date\n-    forms_to_expire = Forms.objects.filter(\n-        auto_expiration=True,\n-        auto_expiration_date__lte=today,\n-        is_expired=False\n+def publish_scheduled_blog_task():\n+    # Get current time in UTC\n+    current_time = now()  # UTC time\n+    logger.info(f\"Task started at: {current_time} (UTC)\")\n+\n+    # Log query criteria for debugging\n+    logger.info(f\"Looking for blogs with publish_date <= {current_time} and status='scheduled'\")\n+\n+    # Filter blogs with publish_date in UTC\n+    scheduled_blogs = Blog.objects.filter(\n+        status='scheduled',\n+        publish_date__lte=current_time  # Match date and time in UTC\n     )\n \n-    expired_count = 0\n-    for form in forms_to_expire:\n+    if scheduled_blogs.exists():\n+        logger.info(f\"Found {scheduled_blogs.count()} scheduled blogs ready for publishing.\")\n+    else:\n+        logger.info(\"No scheduled blogs found for the current time.\")\n+\n+    # Process each blog and publish\n+    published_count = 0\n+    for blog in scheduled_blogs:\n         try:\n-            form.is_expired = True\n-            form.is_show = False  # Optionally hide expired forms\n-            form.save()\n-            expired_count += 1\n+            logger.info(f\"Processing Blog ID: {blog.id}, Title: {blog.title}, Publish Date: {blog.publish_date}\")\n+            # Update status to 'published'\n+            blog.status = 'published'\n+            blog.save(update_fields=['status'])\n+            published_count += 1\n+            logger.info(f\"Successfully published Blog ID: {blog.id}\")\n         except Exception as e:\n-            logger.error(f\"Failed to expire form ID {form.id}: {e}\")\n+            logger.error(f\"Failed to publish Blog ID: {blog.id}, Error: {e}\")\n \n-    logger.info(f\"Auto-expired {expired_count} forms.\")\n-    return f\"Auto-expired {expired_count} forms.\"\n+    logger.info(f\"Task completed. Published {published_count} scheduled blogs.\")\n+    return f\"Published {published_count} scheduled blogs.\"\n"
                }
            ],
            "date": 1731649483809,
            "name": "Commit-0",
            "content": "from celery import shared_task\nfrom django.utils.timezone import now\nfrom .models import Forms\nimport logging\n\nlogger = logging.getLogger(__name__)\n\n@shared_task\ndef auto_expire_forms():\n    today = now().date()  # Get the current date\n    forms_to_expire = Forms.objects.filter(\n        auto_expiration=True,\n        auto_expiration_date__lte=today,\n        is_expired=False\n    )\n\n    expired_count = 0\n    for form in forms_to_expire:\n        try:\n            form.is_expired = True\n            form.is_show = False  # Optionally hide expired forms\n            form.save()\n            expired_count += 1\n        except Exception as e:\n            logger.error(f\"Failed to expire form ID {form.id}: {e}\")\n\n    logger.info(f\"Auto-expired {expired_count} forms.\")\n    return f\"Auto-expired {expired_count} forms.\"\n"
        }
    ]
}