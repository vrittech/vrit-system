{
    "sourceFile": "forms/serializers/forms_serializers.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1730176709027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730176971144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n         model = Category\n         fields = ['id', 'name', 'created_at', 'updated_at']\n \n \n-class FormsListSerializer(serializers.ModelSerializer):\n+class FormsListSerializers(serializers.ModelSerializer):\n     category = CategorySerializer(read_only=True)\n \n     class Meta:\n         model = Forms\n"
                },
                {
                    "date": 1730176977003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             'updated_at',\n         ]\n \n \n-class FormsRetrieveSerializer(serializers.ModelSerializer):\n+class FormsRetrieveSerializers(serializers.ModelSerializer):\n     category = CategorySerializer(read_only=True)\n \n     class Meta:\n         model = Forms\n@@ -49,9 +49,9 @@\n             'updated_at',\n         ]\n \n \n-class FormsWriteSerializer(serializers.ModelSerializer):\n+class FormsWriteSerializers(serializers.ModelSerializer):\n     class Meta:\n         model = Forms\n         fields = [\n             'title',\n"
                },
                {
                    "date": 1730176984912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,20 +12,9 @@\n     category = CategorySerializer(read_only=True)\n \n     class Meta:\n         model = Forms\n-        fields = [\n-            'id',\n-            'title',\n-            'category',\n-            'description',\n-            'excerpt',\n-            'auto_expiration',\n-            'is_expired',\n-            'position',\n-            'created_at',\n-            'updated_at',\n-        ]\n+        fields = \n \n \n class FormsRetrieveSerializers(serializers.ModelSerializer):\n     category = CategorySerializer(read_only=True)\n"
                },
                {
                    "date": 1730176990625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     category = CategorySerializer(read_only=True)\n \n     class Meta:\n         model = Forms\n-        fields = \n+        fields = '__all__'\n \n \n class FormsRetrieveSerializers(serializers.ModelSerializer):\n     category = CategorySerializer(read_only=True)\n"
                },
                {
                    "date": 1730266657197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n     class Meta:\n         model = Forms\n         fields = '__all__'\n \n-\n class FormsRetrieveSerializers(serializers.ModelSerializer):\n     category = CategorySerializer(read_only=True)\n \n     class Meta:\n@@ -61,4 +60,28 @@\n             raise serializers.ValidationError(\n                 \"Auto expiration date is required when auto expiration is enabled.\"\n             )\n         return data\n+\n+    def update(self, instance, validated_data):\n+        image = validated_data.pop('image', None)\n+\n+        # Update instance fields if data is provided\n+        for attr, value in validated_data.items():\n+            setattr(instance, attr, value)\n+\n+        # Handle the image field specifically\n+        if image is not None:\n+            if image == \"null\":\n+                # If image is set to 'null', delete the current image\n+                instance.image.delete(save=False)\n+                instance.image = None\n+            else:\n+                # If image data is sent, update it\n+                instance.image = image\n+\n+        instance.save()\n+        return instance('auto_expiration') and not data.get('auto_expiration_date'):\n+            raise serializers.ValidationError(\n+                \"Auto expiration date is required when auto expiration is enabled.\"\n+            )\n+        return data\n"
                },
                {
                    "date": 1730266677364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,8 +80,8 @@\n                 instance.image = image\n \n         instance.save()\n         return instance('auto_expiration') and not data.get('auto_expiration_date'):\n-            raise serializers.ValidationError(\n+raise serializers.ValidationError(\n                 \"Auto expiration date is required when auto expiration is enabled.\"\n             )\n         return data\n"
                },
                {
                    "date": 1730266688350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,8 +80,8 @@\n                 instance.image = image\n \n         instance.save()\n         return instance('auto_expiration') and not data.get('auto_expiration_date'):\n-raise serializers.ValidationError(\n+            raise serializers.ValidationError(\n                 \"Auto expiration date is required when auto expiration is enabled.\"\n             )\n         return data\n"
                },
                {
                    "date": 1730266706494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,5 @@\n                 # If image data is sent, update it\n                 instance.image = image\n \n         instance.save()\n-        return instance('auto_expiration') and not data.get('auto_expiration_date'):\n-            raise serializers.ValidationError(\n-                \"Auto expiration date is required when auto expiration is enabled.\"\n-            )\n-        return data\n+        return instance\n"
                },
                {
                    "date": 1730272680723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,22 +62,22 @@\n             )\n         return data\n \n     def update(self, instance, validated_data):\n-        image = validated_data.pop('image', None)\n+        # Handle the media field separately\n+        media = validated_data.pop('media', None)\n \n-        # Update instance fields if data is provided\n+        if media is not None:\n+            if media == \"null\":\n+                # If media is set to 'null', delete the current media\n+                instance.media.delete(save=False)\n+                instance.media = None\n+            else:\n+                # If media data is sent, update it\n+                instance.media = media\n+\n+        # Update other fields\n         for attr, value in validated_data.items():\n             setattr(instance, attr, value)\n \n-        # Handle the image field specifically\n-        if image is not None:\n-            if image == \"null\":\n-                # If image is set to 'null', delete the current image\n-                instance.image.delete(save=False)\n-                instance.image = None\n-            else:\n-                # If image data is sent, update it\n-                instance.image = image\n-\n         instance.save()\n         return instance\n"
                },
                {
                    "date": 1730272988075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             'category',\n             'description',\n             'header_code',\n             'embedded_code',\n-            'image',\n+            'media',\n             'excerpt',\n             'auto_expiration',\n             'is_expired',\n             'auto_expiration_date',\n"
                },
                {
                    "date": 1730272993661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n             'category',\n             'description',\n             'header_code',\n             'embedded_code',\n-            'image',\n+            'media',\n             'excerpt',\n             'auto_expiration',\n             'auto_expiration_date',\n             'position',\n"
                },
                {
                    "date": 1731560759792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,24 +19,9 @@\n     category = CategorySerializer(read_only=True)\n \n     class Meta:\n         model = Forms\n-        fields = [\n-            'id',\n-            'title',\n-            'category',\n-            'description',\n-            'header_code',\n-            'embedded_code',\n-            'media',\n-            'excerpt',\n-            'auto_expiration',\n-            'is_expired',\n-            'auto_expiration_date',\n-            'position',\n-            'created_at',\n-            'updated_at',\n-        ]\n+        fields =\n \n \n class FormsWriteSerializers(serializers.ModelSerializer):\n     class Meta:\n"
                },
                {
                    "date": 1731560765139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     category = CategorySerializer(read_only=True)\n \n     class Meta:\n         model = Forms\n-        fields =\n+        fields ='__all__'\n \n \n class FormsWriteSerializers(serializers.ModelSerializer):\n     class Meta:\n"
                },
                {
                    "date": 1731560771716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,20 +25,9 @@\n \n class FormsWriteSerializers(serializers.ModelSerializer):\n     class Meta:\n         model = Forms\n-        fields = [\n-            'title',\n-            'category',\n-            'description',\n-            'header_code',\n-            'embedded_code',\n-            'media',\n-            'excerpt',\n-            'auto_expiration',\n-            'auto_expiration_date',\n-            'position',\n-        ]\n+        fields ='__all__'\n \n     def validate(self, data):\n         # Ensure that if 'auto_expiration' is True, 'auto_expiration_date' is provided\n         if data.get('auto_expiration') and not data.get('auto_expiration_date'):\n"
                }
            ],
            "date": 1730176709027,
            "name": "Commit-0",
            "content": "from rest_framework import serializers\nfrom ..models import Forms, Category\n\n\nclass CategorySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Category\n        fields = ['id', 'name', 'created_at', 'updated_at']\n\n\nclass FormsListSerializer(serializers.ModelSerializer):\n    category = CategorySerializer(read_only=True)\n\n    class Meta:\n        model = Forms\n        fields = [\n            'id',\n            'title',\n            'category',\n            'description',\n            'excerpt',\n            'auto_expiration',\n            'is_expired',\n            'position',\n            'created_at',\n            'updated_at',\n        ]\n\n\nclass FormsRetrieveSerializer(serializers.ModelSerializer):\n    category = CategorySerializer(read_only=True)\n\n    class Meta:\n        model = Forms\n        fields = [\n            'id',\n            'title',\n            'category',\n            'description',\n            'header_code',\n            'embedded_code',\n            'image',\n            'excerpt',\n            'auto_expiration',\n            'is_expired',\n            'auto_expiration_date',\n            'position',\n            'created_at',\n            'updated_at',\n        ]\n\n\nclass FormsWriteSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Forms\n        fields = [\n            'title',\n            'category',\n            'description',\n            'header_code',\n            'embedded_code',\n            'image',\n            'excerpt',\n            'auto_expiration',\n            'auto_expiration_date',\n            'position',\n        ]\n\n    def validate(self, data):\n        # Ensure that if 'auto_expiration' is True, 'auto_expiration_date' is provided\n        if data.get('auto_expiration') and not data.get('auto_expiration_date'):\n            raise serializers.ValidationError(\n                \"Auto expiration date is required when auto expiration is enabled.\"\n            )\n        return data\n"
        }
    ]
}