{
    "sourceFile": "clients/serializers/clientsettings_serializers.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1729837175445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1729837350546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,5 +34,12 @@\n                 delay_time=setting['delay_time']\n             )\n             for setting in settings_data\n         ]\n-        return ClientSettings.objects.bulk_create(client_settings_objects)\n\\ No newline at end of file\n+        return ClientSettings.objects.bulk_create(client_settings_objects)\n+    \n+    {\n+  \"settings\": [\n+    {\"section\": \"first\", \"loop_type\": \"reverse\", \"delay_time\": \"00:01:00\"},\n+    {\"section\": \"second\", \"loop_type\": \"forward\", \"delay_time\": \"00:00:30\"}\n+  ]\n+}\n"
                },
                {
                    "date": 1731049740607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,10 @@\n             for setting in settings_data\n         ]\n         return ClientSettings.objects.bulk_create(client_settings_objects)\n     \n-    {\n-  \"settings\": [\n-    {\"section\": \"first\", \"loop_type\": \"reverse\", \"delay_time\": \"00:01:00\"},\n-    {\"section\": \"second\", \"loop_type\": \"forward\", \"delay_time\": \"00:00:30\"}\n-  ]\n-}\n+#     {\n+#   \"settings\": [\n+#     {\"section\": \"first\", \"loop_type\": \"reverse\", \"delay_time\": \"00:01:00\"},\n+#     {\"section\": \"second\", \"loop_type\": \"forward\", \"delay_time\": \"00:00:30\"}\n+#   ]\n+# }\n"
                },
                {
                    "date": 1731305256886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,14 @@\n \n class BulkClientSettingsSerializer(serializers.Serializer):\n     settings = ClientSettingsArraySerializer(many=True)\n \n+    def to_internal_value(self, data):\n+        # Check if `settings` is a single object rather than a list and wrap it in a list\n+        if isinstance(data.get(\"settings\"), dict):\n+            data[\"settings\"] = [data[\"settings\"]]\n+        return super().to_internal_value(data)\n+\n     def create(self, validated_data):\n         settings_data = validated_data['settings']\n         client_settings_objects = [\n             ClientSettings(\n@@ -35,8 +41,9 @@\n             )\n             for setting in settings_data\n         ]\n         return ClientSettings.objects.bulk_create(client_settings_objects)\n+\n     \n #     {\n #   \"settings\": [\n #     {\"section\": \"first\", \"loop_type\": \"reverse\", \"delay_time\": \"00:01:00\"},\n"
                },
                {
                    "date": 1731305343169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n class BulkClientSettingsSerializer(serializers.Serializer):\n     settings = ClientSettingsArraySerializer(many=True)\n \n     def to_internal_value(self, data):\n-        # Check if `settings` is a single object rather than a list and wrap it in a list\n+        # Wrap single dictionary in a list if `settings` is not already an array\n         if isinstance(data.get(\"settings\"), dict):\n             data[\"settings\"] = [data[\"settings\"]]\n         return super().to_internal_value(data)\n \n"
                }
            ],
            "date": 1729837175445,
            "name": "Commit-0",
            "content": "from rest_framework import serializers\nfrom ..models import ClientSettings\n\nclass ClientSettingsListSerializers(serializers.ModelSerializer):\n    class Meta:\n        model = ClientSettings\n        fields = '__all__'\n\nclass ClientSettingsRetrieveSerializers(serializers.ModelSerializer):\n    class Meta:\n        model = ClientSettings\n        fields = '__all__'\n\nclass ClientSettingsWriteSerializers(serializers.ModelSerializer):\n    class Meta:\n        model = ClientSettings\n        fields = '__all__'\n\nclass ClientSettingsArraySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ClientSettings\n        fields = '__all__'\n\n\nclass BulkClientSettingsSerializer(serializers.Serializer):\n    settings = ClientSettingsArraySerializer(many=True)\n\n    def create(self, validated_data):\n        settings_data = validated_data['settings']\n        client_settings_objects = [\n            ClientSettings(\n                section=setting['section'],\n                loop_type=setting['loop_type'],\n                delay_time=setting['delay_time']\n            )\n            for setting in settings_data\n        ]\n        return ClientSettings.objects.bulk_create(client_settings_objects)"
        }
    ]
}