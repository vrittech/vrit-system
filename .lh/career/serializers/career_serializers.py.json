{
    "sourceFile": "career/serializers/career_serializers.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1729840894139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1729840905015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n from rest_framework import serializers\n from ..models import Career,ExperienceLevel\n \n-class ExprienceLevelSerializers_Career(serializers.ModelSerializer):\n+class ExperienceLevelSerializers_Career(serializers.ModelSerializer):\n     class Meta:\n-        model = ExprienceLevel\n+        model = ExperienceLevel\n         fields = ['level_name']\n \n class CareerListSerializers(serializers.ModelSerializer):\n     experience_level = ExprienceLevelSerializers_Career()\n"
                },
                {
                    "date": 1729840911061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n         model = ExperienceLevel\n         fields = ['level_name']\n \n class CareerListSerializers(serializers.ModelSerializer):\n-    experience_level = ExprienceLevelSerializers_Career()\n+    experience_level = ExperienceLevelSerializers_Career()\n     class Meta:\n         model = Career\n         fields = '__all__'\n \n"
                },
                {
                    "date": 1729841603264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n         model = Career\n         fields = '__all__'\n \n class CareerRetrieveSerializers(serializers.ModelSerializer):\n-    experience_level = ExprienceLevelSerializers_Career()\n+    experience_level = ExperienceLevelSerializers_Career()\n     class Meta:\n         model = Career\n         fields = '__all__'\n \n"
                },
                {
                    "date": 1729853373979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,5 +20,12 @@\n \n class CareerWriteSerializers(serializers.ModelSerializer):\n     class Meta:\n         model = Career\n-        fields = '__all__'\n\\ No newline at end of file\n+        fields = '__all__'\n+    \n+     def validate(self, data):\n+        # Check if the position already exists in another collection\n+        position = data.get('position')\n+        if Clients.objects.filter(position=position).exists():\n+            raise serializers.ValidationError({\"A collection with this position already exists.\"})\n+        return data\n\\ No newline at end of file\n"
                },
                {
                    "date": 1729853381114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n     class Meta:\n         model = Career\n         fields = '__all__'\n     \n-     def validate(self, data):\n+    def validate(self, data):\n         # Check if the position already exists in another collection\n         position = data.get('position')\n-        if Clients.objects.filter(position=position).exists():\n+        if Career.objects.filter(position=position).exists():\n             raise serializers.ValidationError({\"A collection with this position already exists.\"})\n         return data\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730265902297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,22 @@\n from rest_framework import serializers\n-from ..models import Career,ExperienceLevel\n+from ..models import Career, ExperienceLevel\n \n class ExperienceLevelSerializers_Career(serializers.ModelSerializer):\n     class Meta:\n         model = ExperienceLevel\n         fields = ['level_name']\n \n class CareerListSerializers(serializers.ModelSerializer):\n     experience_level = ExperienceLevelSerializers_Career()\n+\n     class Meta:\n         model = Career\n         fields = '__all__'\n \n class CareerRetrieveSerializers(serializers.ModelSerializer):\n     experience_level = ExperienceLevelSerializers_Career()\n+\n     class Meta:\n         model = Career\n         fields = '__all__'\n \n@@ -23,9 +25,29 @@\n         model = Career\n         fields = '__all__'\n     \n     def validate(self, data):\n-        # Check if the position already exists in another collection\n+        # Check if the position already exists in another Career\n         position = data.get('position')\n-        if Career.objects.filter(position=position).exists():\n-            raise serializers.ValidationError({\"A collection with this position already exists.\"})\n\\ No newline at end of file\n-        return data\n+        if position and Career.objects.filter(position=position).exists():\n+            raise serializers.ValidationError({\"position\": \"A career with this position already exists.\"})\n+        return data\n+\n+    def update(self, instance, validated_data):\n+        # Handle the image field separately\n+        image = validated_data.pop('image', None)\n+\n+        if image is not None:\n+            if image == \"null\":\n+                # If image is set to 'null', delete the current image\n+                instance.image.delete(save=False)\n+                instance.image = None\n+            else:\n+                # If image data is sent, update it\n+                instance.image = image\n+\n+        # Update other fields\n+        for attr, value in validated_data.items():\n+            setattr(instance, attr, value)\n+\n+        instance.save()\n+        return instance\n"
                }
            ],
            "date": 1729840894139,
            "name": "Commit-0",
            "content": "from rest_framework import serializers\nfrom ..models import Career,ExperienceLevel\n\nclass ExprienceLevelSerializers_Career(serializers.ModelSerializer):\n    class Meta:\n        model = ExprienceLevel\n        fields = ['level_name']\n\nclass CareerListSerializers(serializers.ModelSerializer):\n    experience_level = ExprienceLevelSerializers_Career()\n    class Meta:\n        model = Career\n        fields = '__all__'\n\nclass CareerRetrieveSerializers(serializers.ModelSerializer):\n    experience_level = ExprienceLevelSerializers_Career()\n    class Meta:\n        model = Career\n        fields = '__all__'\n\nclass CareerWriteSerializers(serializers.ModelSerializer):\n    class Meta:\n        model = Career\n        fields = '__all__'"
        }
    ]
}