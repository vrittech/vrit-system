{
    "sourceFile": "career/viewsets/expriencelevel_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1729840771815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1729840783094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,17 @@\n from rest_framework import viewsets\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import ExperienceLevel\n-from ..serializers.expriencelevel_serializers import ExprienceLevelListSerializers, ExprienceLevelRetrieveSerializers, ExprienceLevelWriteSerializers\n+from ..serializers.expriencelevel_serializers import ExperienceLevelLevelListSerializers, ExprienceLevelRetrieveSerializers, ExprienceLevelWriteSerializers\n from ..utilities.importbase import *\n \n class expriencelevelViewsets(viewsets.ModelViewSet):\n     serializer_class = ExprienceLevelListSerializers\n     # permission_classes = [careerPermission]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n-    queryset = ExprienceLevel.objects.all()\n+    queryset = ExperienceLevel.objects.all()\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n"
                },
                {
                    "date": 1729840788784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n from rest_framework import viewsets\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import ExperienceLevel\n-from ..serializers.expriencelevel_serializers import ExperienceLevelLevelListSerializers, ExprienceLevelRetrieveSerializers, ExprienceLevelWriteSerializers\n+from ..serializers.expriencelevel_serializers import ExperienceLevelListSerializers, ExprienceLevelRetrieveSerializers, ExprienceLevelWriteSerializers\n from ..utilities.importbase import *\n \n class expriencelevelViewsets(viewsets.ModelViewSet):\n     serializer_class = ExprienceLevelListSerializers\n"
                },
                {
                    "date": 1729840795762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n from rest_framework import viewsets\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import ExperienceLevel\n-from ..serializers.expriencelevel_serializers import ExperienceLevelListSerializers, ExprienceLevelRetrieveSerializers, ExprienceLevelWriteSerializers\n+from ..serializers.expriencelevel_serializers import ExperienceLevelListSerializers, ExperienceLevelRetrieveSerializers, ExprienceLevelWriteSerializers\n from ..utilities.importbase import *\n \n class expriencelevelViewsets(viewsets.ModelViewSet):\n     serializer_class = ExprienceLevelListSerializers\n"
                },
                {
                    "date": 1729840813698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n from rest_framework import viewsets\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import ExperienceLevel\n-from ..serializers.expriencelevel_serializers import ExperienceLevelListSerializers, ExperienceLevelRetrieveSerializers, ExprienceLevelWriteSerializers\n+from ..serializers.expriencelevel_serializers import ExperienceLevelListSerializers, ExperienceLevelRetrieveSerializers, ExperienceLevelWriteSerializers\n from ..utilities.importbase import *\n \n class expriencelevelViewsets(viewsets.ModelViewSet):\n-    serializer_class = ExprienceLevelListSerializers\n+    serializer_class = ExperienceLevelListSerializers\n     # permission_classes = [careerPermission]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = ExperienceLevel.objects.all()\n"
                },
                {
                    "date": 1729840821291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return ExprienceLevelWriteSerializers\n         elif self.action == 'retrieve':\n-            return ExprienceLevelRetrieveSerializers\n+            return ExperienceLevelRetrieveSerializers\n         return super().get_serializer_class()\n \n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n"
                }
            ],
            "date": 1729840771815,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import ExperienceLevel\nfrom ..serializers.expriencelevel_serializers import ExprienceLevelListSerializers, ExprienceLevelRetrieveSerializers, ExprienceLevelWriteSerializers\nfrom ..utilities.importbase import *\n\nclass expriencelevelViewsets(viewsets.ModelViewSet):\n    serializer_class = ExprienceLevelListSerializers\n    # permission_classes = [careerPermission]\n    # authentication_classes = [JWTAuthentication]\n    pagination_class = MyPageNumberPagination\n    queryset = ExprienceLevel.objects.all()\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id']\n    ordering_fields = ['id']\n\n    # filterset_fields = {\n    #     'id': ['exact'],\n    # }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        return queryset\n        #return queryset.filter(user_id=self.request.user.id)\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return ExprienceLevelWriteSerializers\n        elif self.action == 'retrieve':\n            return ExprienceLevelRetrieveSerializers\n        return super().get_serializer_class()\n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}