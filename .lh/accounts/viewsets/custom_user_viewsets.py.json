{
    "sourceFile": "accounts/viewsets/custom_user_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1731475845103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731481016706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,6 +40,6 @@\n         \n         return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n     \n     @action(detail=False, methods=['get'], name=\"GetSelfDetail\", url_path=\"me\")\n-    def GetSelfDetail(self, request, *args, **kwargs):\n-        return super().list(request, *args, **kwargs)  \n\\ No newline at end of file\n+def GetSelfDetail(self, request, *args, **kwargs):\n+    return super().retrieve(request, *args, **kwargs)\n"
                },
                {
                    "date": 1731481118483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,6 +40,6 @@\n         \n         return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n     \n     @action(detail=False, methods=['get'], name=\"GetSelfDetail\", url_path=\"me\")\n-def GetSelfDetail(self, request, *args, **kwargs):\n-    return super().retrieve(request, *args, **kwargs)\n+    def GetSelfDetail(self, request, *args, **kwargs):\n+        return super().retrieve(request, *args, **kwargs)\n"
                },
                {
                    "date": 1731481297461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,7 +39,8 @@\n             return Response({\"detail\": \"Password changed successfully\"}, status=status.HTTP_200_OK)\n         \n         return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n     \n-    @action(detail=False, methods=['get'], name=\"GetSelfDetail\", url_path=\"me\")\n     def GetSelfDetail(self, request, *args, **kwargs):\n-        return super().retrieve(request, *args, **kwargs)\n+    self.object = request.user  # Set the object directly to the current user\n+    serializer = self.get_serializer(self.object)\n+    return Response(serializer.data)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731481309902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n             user.save()  # Save the updated user instance\n             return Response({\"detail\": \"Password changed successfully\"}, status=status.HTTP_200_OK)\n         \n         return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n-    \n+    @action(detail=False, methods=['get'], name=\"GetSelfDetail\", url_path=\"me\")\n     def GetSelfDetail(self, request, *args, **kwargs):\n-    self.object = request.user  # Set the object directly to the current user\n-    serializer = self.get_serializer(self.object)\n\\ No newline at end of file\n-    return Response(serializer.data)\n+        self.object = request.user  # Set the object directly to the current user\n+        serializer = self.get_serializer(self.object)\n+        return Response(serializer.data)\n\\ No newline at end of file\n"
                }
            ],
            "date": 1731475845103,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework import permissions\nfrom django.contrib.auth import get_user_model\nfrom rest_framework.views import APIView\nfrom drf_yasg.utils import swagger_auto_schema\nfrom drf_yasg import openapi\nfrom rest_framework import status\nfrom django.views.decorators.csrf import csrf_exempt\nfrom ..serializers.custom_user_serializers import CustomUserReadSerializer, CustomUserWriteSerializer, CustomUserRetrieveSerializer,CustomUserChangePasswordSerializers\nfrom rest_framework.response import Response\nfrom accounts.models import CustomUser\nfrom django.contrib.auth import authenticate,login\nfrom rest_framework_simplejwt.tokens import RefreshToken\nfrom rest_framework.decorators import action\n\nclass CustomUserViewSet(viewsets.ModelViewSet):\n    queryset = CustomUser.objects.all()\n    permission_classes = [permissions.IsAuthenticated]\n\n    def get_serializer_class(self):\n        if self.action in ['list']:\n            return CustomUserReadSerializer\n        elif self.action in ['create', 'update', 'partial_update']:\n            return CustomUserWriteSerializer\n        elif self.action in ['retrieve']:\n            return CustomUserRetrieveSerializer\n        elif self.action in ['changePassword']:\n            return CustomUserChangePasswordSerializers\n        return CustomUserReadSerializer\n    \n    @action(detail=False, methods=['post'], name=\"changePassword\", url_path=\"change-password\")\n    def changePassword(self, request, *args, **kwargs):\n        serializer = CustomUserChangePasswordSerializers(data=request.data, context={'request': request})\n        \n        if serializer.is_valid():\n            user = request.user  # Get the current authenticated user\n            user.set_password(serializer.validated_data['new_password'])  # Hash and set the new password\n            user.save()  # Save the updated user instance\n            return Response({\"detail\": \"Password changed successfully\"}, status=status.HTTP_200_OK)\n        \n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n    \n    @action(detail=False, methods=['get'], name=\"GetSelfDetail\", url_path=\"me\")\n    def GetSelfDetail(self, request, *args, **kwargs):\n        return super().list(request, *args, **kwargs)  "
        }
    ]
}