{
    "sourceFile": "accounts/viewsets/groupextension_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1731993070463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731993078672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,11 +7,11 @@\n \n class groupextensionViewsets(viewsets.ModelViewSet):\n     serializer_class = GroupExtensionListSerializers\n     # permission_classes = [accountsPermission]\n-    # authentication_classes = [JWTAuthentication]\n+    authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n-    queryset = GroupExtension.objects.all()\n+    queryset = GroupExtension.objects.all().order_by\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n"
                },
                {
                    "date": 1731993094718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,17 +9,17 @@\n     serializer_class = GroupExtensionListSerializers\n     # permission_classes = [accountsPermission]\n     authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n-    queryset = GroupExtension.objects.all().order_by\n+    queryset = GroupExtension.objects.all().order_by('position')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n \n-    # filterset_fields = {\n-    #     'id': ['exact'],\n-    # }\n+    filterset_fields = {\n+        'id': ['exact'],\n+    }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n         #return queryset.filter(user_id=self.request.user.id)\n"
                },
                {
                    "date": 1731994663511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n-        #return queryset.filter(user_id=self.request.user.id)\n+        return queryset.filter(user_id=self.request.user.id)\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return GroupExtensionWriteSerializers\n"
                }
            ],
            "date": 1731993070463,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import GroupExtension\nfrom ..serializers.groupextension_serializers import GroupExtensionListSerializers, GroupExtensionRetrieveSerializers, GroupExtensionWriteSerializers\nfrom ..utilities.importbase import *\n\nclass groupextensionViewsets(viewsets.ModelViewSet):\n    serializer_class = GroupExtensionListSerializers\n    # permission_classes = [accountsPermission]\n    # authentication_classes = [JWTAuthentication]\n    pagination_class = MyPageNumberPagination\n    queryset = GroupExtension.objects.all()\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id']\n    ordering_fields = ['id']\n\n    # filterset_fields = {\n    #     'id': ['exact'],\n    # }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        #return queryset.filter(user_id=self.request.user.id)\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return GroupExtensionWriteSerializers\n        elif self.action == 'retrieve':\n            return GroupExtensionRetrieveSerializers\n        return super().get_serializer_class()\n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}