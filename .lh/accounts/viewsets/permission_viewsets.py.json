{
    "sourceFile": "accounts/viewsets/permission_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 32,
            "patches": [
                {
                    "date": 1731921458517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731921472300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,7 +3,7 @@\n from rest_framework.permissions import IsAdminUser\n from ..serializers.permission_serializers import PermissionSerializer\n \n class PermissionViewSet(viewsets.ReadOnlyModelViewSet):\n-    queryset = Permission.objects.all().order\n+    queryset = Permission.objects.all().order_by('-id')\n     serializer_class = PermissionSerializer\n     permission_classes = [IsAdminUser]\n"
                },
                {
                    "date": 1731921497320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,4 +6,13 @@\n class PermissionViewSet(viewsets.ReadOnlyModelViewSet):\n     queryset = Permission.objects.all().order_by('-id')\n     serializer_class = PermissionSerializer\n     permission_classes = [IsAdminUser]\n+    \n+    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n+    search_fields = ['id','email', 'phone_number', 'position', 'created_at', 'updated_at',]\n+    ordering_fields = ['id','email', 'phone_number', 'position', 'created_at', 'updated_at',]\n+# ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n+    filterset_fields = {\n+        'created_at': ['exact','gte','lte'],\n+    }\n+\n"
                },
                {
                    "date": 1731921511798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n from django.contrib.auth.models import Group, Permission\n from rest_framework import viewsets\n from rest_framework.permissions import IsAdminUser\n from ..serializers.permission_serializers import PermissionSerializer\n+from rest_framework.filters import SearchFilter, OrderingFilter\n+from django_filters.rest_framework import DjangoFilterBackend\n \n class PermissionViewSet(viewsets.ReadOnlyModelViewSet):\n     queryset = Permission.objects.all().order_by('-id')\n     serializer_class = PermissionSerializer\n"
                },
                {
                    "date": 1731921529657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     serializer_class = PermissionSerializer\n     permission_classes = [IsAdminUser]\n     \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','email', 'phone_number', 'position', 'created_at', 'updated_at',]\n+    search_fields = '__'\n     ordering_fields = ['id','email', 'phone_number', 'position', 'created_at', 'updated_at',]\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n         'created_at': ['exact','gte','lte'],\n"
                },
                {
                    "date": 1731921536130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,10 @@\n     queryset = Permission.objects.all().order_by('-id')\n     serializer_class = PermissionSerializer\n     permission_classes = [IsAdminUser]\n     \n-    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = '__'\n+    filter_backends = [SearchFi'__all__'lter, DjangoFilterBackend, OrderingFilter]\n+    search_fields = \n     ordering_fields = ['id','email', 'phone_number', 'position', 'created_at', 'updated_at',]\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n         'created_at': ['exact','gte','lte'],\n"
                },
                {
                    "date": 1731921561647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,11 +9,11 @@\n     queryset = Permission.objects.all().order_by('-id')\n     serializer_class = PermissionSerializer\n     permission_classes = [IsAdminUser]\n     \n-    filter_backends = [SearchFi'__all__'lter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = \n-    ordering_fields = ['id','email', 'phone_number', 'position', 'created_at', 'updated_at',]\n+    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n+    search_fields = '__all__'\n+    ordering_fields = \n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n         'created_at': ['exact','gte','lte'],\n     }\n"
                },
                {
                    "date": 1731921569099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,8 @@\n     permission_classes = [IsAdminUser]\n     \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = '__all__'\n-    ordering_fields = \n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n         'created_at': ['exact','gte','lte'],\n     }\n"
                },
                {
                    "date": 1731921574354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,6 +14,7 @@\n     search_fields = '__all__'\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n         'created_at': ['exact','gte','lte'],\n+        \n     }\n \n"
                },
                {
                    "date": 1731921590311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,7 +14,7 @@\n     search_fields = '__all__'\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n         'created_at': ['exact','gte','lte'],\n-        \n+        'c'\n     }\n \n"
                },
                {
                    "date": 1731921595570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,7 +14,7 @@\n     search_fields = '__all__'\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n         'created_at': ['exact','gte','lte'],\n-        'c'\n+        'name'\n     }\n \n"
                },
                {
                    "date": 1731921605322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,7 +14,7 @@\n     search_fields = '__all__'\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n         'created_at': ['exact','gte','lte'],\n-        'name'\n+        'name':\n     }\n \n"
                },
                {
                    "date": 1731921611122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,7 +14,7 @@\n     search_fields = '__all__'\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n         'created_at': ['exact','gte','lte'],\n-        'name':\n+        'name':['ico.....']\n     }\n \n"
                },
                {
                    "date": 1731922451561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,7 +14,7 @@\n     search_fields = '__all__'\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n         'created_at': ['exact','gte','lte'],\n-        'name':['ico.....']\n+        'codename':['ico.....']\n     }\n \n"
                },
                {
                    "date": 1731922464822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,8 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = '__all__'\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n-        'created_at': ['exact','gte','lte'],\n-        'codename':['ico.....']\n+        'name': ['exact','gte','lte'],\n+        'codename':['icontains']\n     }\n \n"
                },
                {
                    "date": 1731922469992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,7 +14,7 @@\n     search_fields = '__all__'\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n         'name': ['exact','gte','lte'],\n-        'codename':['icontains']\n+        'codename':[exact,'icontains']\n     }\n \n"
                },
                {
                    "date": 1731922481621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,8 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = '__all__'\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n-        'name': ['exact','gte','lte'],\n-        'codename':[exact,'icontains']\n+        'name': ['exact','icontains'],\n+        'codename':['exact','icontains']\n     }\n \n"
                },
                {
                    "date": 1731922491679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = '__all__'\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n+        \n         'name': ['exact','icontains'],\n         'codename':['exact','icontains']\n     }\n \n"
                },
                {
                    "date": 1731922499452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = '__all__'\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n-        \n+        'id':['exact']\n         'name': ['exact','icontains'],\n         'codename':['exact','icontains']\n     }\n \n"
                },
                {
                    "date": 1731922666354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,12 +10,12 @@\n     serializer_class = PermissionSerializer\n     permission_classes = [IsAdminUser]\n     \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = '__all__'\n+    search_fields = []\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n-        'id':['exact']\n+        'id':['exact'],\n         'name': ['exact','icontains'],\n         'codename':['exact','icontains']\n     }\n \n"
                },
                {
                    "date": 1731922672593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     serializer_class = PermissionSerializer\n     permission_classes = [IsAdminUser]\n     \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = []\n+    search_fields = ['codename','id']\n # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n     filterset_fields = {\n         'id':['exact'],\n         'name': ['exact','icontains'],\n"
                },
                {
                    "date": 1731999565115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,17 @@\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n \n class PermissionViewSet(viewsets.ReadOnlyModelViewSet):\n-    queryset = Permission.objects.all().order_by('-id')\n-    serializer_class = PermissionSerializer\n-    permission_classes = [IsAdminUser]\n+#     queryset = Permission.objects.all().order_by('-id')\n+#     serializer_class = PermissionSerializer\n+#     permission_classes = [IsAdminUser]\n     \n-    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['codename','id']\n-# ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n-    filterset_fields = {\n-        'id':['exact'],\n-        'name': ['exact','icontains'],\n-        'codename':['exact','icontains']\n-    }\n+#     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n+#     search_fields = ['codename','id','name']\n+# # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n+#     filterset_fields = {\n+#         'id':['exact'],\n+#         'name': ['exact','icontains'],\n+#         'codename':['exact','icontains']\n+#     }\n \n"
                },
                {
                    "date": 1731999578724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,5 +17,45 @@\n #         'id':['exact'],\n #         'name': ['exact','icontains'],\n #         'codename':['exact','icontains']\n #     }\n+    app_labels = [\n+            'accounts',\n+            'blog',\n+            'career',\n+            'casestudy',\n+            'clients',\n+            'department',\n+            'emailmanagement',\n+            'faqs',\n+            'gallery',\n+            'globalpresence',\n+            'inquires',\n+            'newslettersubscription',\n+            'plan',\n+            'projects',\n+            'socialmedia',\n+            'testimonial',\n+            'sitesetting',\n+            'careergallery',\n+            'management',\n+            'forms',\n+            'notifications',\n+        ]\n \n+        # Filter permissions to include only those related to the specified apps\n+        queryset = Permission.objects.filter(\n+            content_type__app_label__in=app_labels\n+        ).order_by('-id')\n+\n+        serializer_class = PermissionSerializer\n+        permission_classes = [IsAdminUser]\n+        \n+        # Add filters for searching and ordering\n+        filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n+        search_fields = ['codename', 'id', 'name']\n+        filterset_fields = {\n+            'id': ['exact'],\n+            'name': ['exact', 'icontains'],\n+            'codename': ['exact', 'icontains']\n+        }\n+\n"
                },
                {
                    "date": 1731999584675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n             'notifications',\n         ]\n \n         # Filter permissions to include only those related to the specified apps\n-        queryset = Permission.objects.filter(\n+    queryset = Permission.objects.filter(\n             content_type__app_label__in=app_labels\n         ).order_by('-id')\n \n         serializer_class = PermissionSerializer\n"
                },
                {
                    "date": 1731999596955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,10 @@\n             content_type__app_label__in=app_labels\n         ).order_by('-id')\n \n         serializer_class = PermissionSerializer\n+        serializer_class = PermissionSerializer\n+        serializer_class = PermissionSerializer\n         permission_classes = [IsAdminUser]\n         \n         # Add filters for searching and ordering\n         filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n"
                },
                {
                    "date": 1731999610435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,18 +46,16 @@\n     queryset = Permission.objects.filter(\n             content_type__app_label__in=app_labels\n         ).order_by('-id')\n \n-        serializer_class = PermissionSerializer\n-        serializer_class = PermissionSerializer\n-        serializer_class = PermissionSerializer\n-        permission_classes = [IsAdminUser]\n-        \n-        # Add filters for searching and ordering\n-        filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-        search_fields = ['codename', 'id', 'name']\n-        filterset_fields = {\n-            'id': ['exact'],\n-            'name': ['exact', 'icontains'],\n-            'codename': ['exact', 'icontains']\n-        }\n+    serializer_class = PermissionSerializer\n+    permission_classes = [IsAdminUser]\n+    \n+    # Add filters for searching and ordering\n+    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n+    search_fields = ['codename', 'id', 'name']\n+    filterset_fields = {\n+        'id': ['exact'],\n+        'name': ['exact', 'icontains'],\n+        'codename': ['exact', 'icontains']\n+    }\n \n"
                },
                {
                    "date": 1731999816730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,34 +17,12 @@\n #         'id':['exact'],\n #         'name': ['exact','icontains'],\n #         'codename':['exact','icontains']\n #     }\n-    app_labels = [\n-            'accounts',\n-            'blog',\n-            'career',\n-            'casestudy',\n-            'clients',\n-            'department',\n-            'emailmanagement',\n-            'faqs',\n-            'gallery',\n-            'globalpresence',\n-            'inquires',\n-            'newslettersubscription',\n-            'plan',\n-            'projects',\n-            'socialmedia',\n-            'testimonial',\n-            'sitesetting',\n-            'careergallery',\n-            'management',\n-            'forms',\n-            'notifications',\n-        ]\n-\n-        # Filter permissions to include only those related to the specified apps\n-    queryset = Permission.objects.filter(\n+    # Dynamically get all app labels from ContentType\n+    def get_queryset(self):\n+        app_labels = ContentType.objects.values_list('app_label', flat=True).distinct()\n+        return Permission.objects.filter(\n             content_type__app_label__in=app_labels\n         ).order_by('-id')\n \n     serializer_class = PermissionSerializer\n@@ -56,6 +34,5 @@\n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact', 'icontains'],\n         'codename': ['exact', 'icontains']\n-    }\n-\n+    }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731999827032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,15 @@\n from rest_framework.permissions import IsAdminUser\n from ..serializers.permission_serializers import PermissionSerializer\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n-\n+from django.contrib.auth.models import Permission\n+from django.contrib.contenttypes.models import ContentType\n+from rest_framework import viewsets\n+from rest_framework.permissions import IsAdminUser\n+from rest_framework.filters import SearchFilter, OrderingFilter\n+from django_filters.rest_framework import DjangoFilterBackend\n+from ..serializers.permission_serializers import PermissionSerializer\n class PermissionViewSet(viewsets.ReadOnlyModelViewSet):\n #     queryset = Permission.objects.all().order_by('-id')\n #     serializer_class = PermissionSerializer\n #     permission_classes = [IsAdminUser]\n"
                },
                {
                    "date": 1732000014133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,31 +11,27 @@\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n from ..serializers.permission_serializers import PermissionSerializer\n class PermissionViewSet(viewsets.ReadOnlyModelViewSet):\n-#     queryset = Permission.objects.all().order_by('-id')\n-#     serializer_class = PermissionSerializer\n-#     permission_classes = [IsAdminUser]\n-    \n-#     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-#     search_fields = ['codename','id','name']\n-# # ('email', 'phone_number', 'position', 'created_at', 'updated_at', )\n-#     filterset_fields = {\n-#         'id':['exact'],\n-#         'name': ['exact','icontains'],\n-#         'codename':['exact','icontains']\n-#     }\n-    # Dynamically get all app labels from ContentType\n+class PermissionViewSet(viewsets.ReadOnlyModelViewSet):\n     def get_queryset(self):\n-        app_labels = ContentType.objects.values_list('app_label', flat=True).distinct()\n+        # Get all installed apps\n+        installed_apps = apps.get_app_configs()\n+\n+        # Filter only custom apps (exclude built-in and third-party apps)\n+        custom_app_labels = [\n+            app.label for app in installed_apps\n+            if app.module.__name__.startswith('your_project_name')  # Replace 'your_project_name' with your project folder name\n+        ]\n+\n+        # Fetch permissions related to the custom apps\n         return Permission.objects.filter(\n-            content_type__app_label__in=app_labels\n+            content_type__app_label__in=custom_app_labels\n         ).order_by('-id')\n \n     serializer_class = PermissionSerializer\n     permission_classes = [IsAdminUser]\n     \n-    # Add filters for searching and ordering\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['codename', 'id', 'name']\n     filterset_fields = {\n         'id': ['exact'],\n"
                },
                {
                    "date": 1732000034598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,8 @@\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n from ..serializers.permission_serializers import PermissionSerializer\n class PermissionViewSet(viewsets.ReadOnlyModelViewSet):\n-class PermissionViewSet(viewsets.ReadOnlyModelViewSet):\n     def get_queryset(self):\n         # Get all installed apps\n         installed_apps = apps.get_app_configs()\n \n"
                },
                {
                    "date": 1732000043466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n from rest_framework.permissions import IsAdminUser\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n from ..serializers.permission_serializers import PermissionSerializer\n+from django.apps import apps\n class PermissionViewSet(viewsets.ReadOnlyModelViewSet):\n     def get_queryset(self):\n         # Get all installed apps\n         installed_apps = apps.get_app_configs()\n"
                },
                {
                    "date": 1732000049265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \n         # Filter only custom apps (exclude built-in and third-party apps)\n         custom_app_labels = [\n             app.label for app in installed_apps\n-            if app.module.__name__.startswith('your_project_name')  # Replace 'your_project_name' with your project folder name\n+            if app.module.__name__.startswith('vrittech')  # Replace 'your_project_name' with your project folder name\n         ]\n \n         # Fetch permissions related to the custom apps\n         return Permission.objects.filter(\n"
                },
                {
                    "date": 1732000350827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,36 @@\n-from django.contrib.auth.models import Group, Permission\n-from rest_framework import viewsets\n-from rest_framework.permissions import IsAdminUser\n-from ..serializers.permission_serializers import PermissionSerializer\n-from rest_framework.filters import SearchFilter, OrderingFilter\n-from django_filters.rest_framework import DjangoFilterBackend\n+from django.apps import apps\n from django.contrib.auth.models import Permission\n-from django.contrib.contenttypes.models import ContentType\n from rest_framework import viewsets\n from rest_framework.permissions import IsAdminUser\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n from ..serializers.permission_serializers import PermissionSerializer\n-from django.apps import apps\n+\n class PermissionViewSet(viewsets.ReadOnlyModelViewSet):\n     def get_queryset(self):\n-        # Get all installed apps\n-        installed_apps = apps.get_app_configs()\n+        # Dynamically identify custom apps by excluding built-in and third-party apps\n+        excluded_apps = [\n+            'django.contrib.admin',\n+            'django.contrib.auth',\n+            'django.contrib.contenttypes',\n+            'django.contrib.sessions',\n+            'django.contrib.messages',\n+            'django.contrib.staticfiles',\n+            'corsheaders',\n+            'rest_framework',\n+            'drf_yasg',\n+            'django_celery_beat',\n+            'django_filters',\n+        ]\n \n-        # Filter only custom apps (exclude built-in and third-party apps)\n+        # Get all installed apps and exclude the built-in/third-party ones\n         custom_app_labels = [\n-            app.label for app in installed_apps\n-            if app.module.__name__.startswith('vrittech')  # Replace 'your_project_name' with your project folder name\n+            app.label for app in apps.get_app_configs()\n+            if app.name not in excluded_apps\n         ]\n \n-        # Fetch permissions related to the custom apps\n+        # Fetch permissions related to these custom apps\n         return Permission.objects.filter(\n             content_type__app_label__in=custom_app_labels\n         ).order_by('-id')\n \n@@ -36,5 +42,5 @@\n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact', 'icontains'],\n         'codename': ['exact', 'icontains']\n-    }\n\\ No newline at end of file\n+    }\n"
                }
            ],
            "date": 1731921458517,
            "name": "Commit-0",
            "content": "from django.contrib.auth.models import Group, Permission\nfrom rest_framework import viewsets\nfrom rest_framework.permissions import IsAdminUser\nfrom ..serializers.permission_serializers import PermissionSerializer\n\nclass PermissionViewSet(viewsets.ReadOnlyModelViewSet):\n    queryset = Permission.objects.all().order\n    serializer_class = PermissionSerializer\n    permission_classes = [IsAdminUser]\n"
        }
    ]
}