{
    "sourceFile": "projects/serializers/projectservice_serializers.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1729852922608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1729852928674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,5 +14,11 @@\n class ProjectServiceWriteSerializers(serializers.ModelSerializer):\n     class Meta:\n         model = ProjectService\n         fields = '__all__'\n-    \n\\ No newline at end of file\n+    \n+    def validate(self, data):\n+        # Check if the position already exists in another collection\n+        position = data.get('position')\n+        if ProjectS.objects.filter(position=position).exists():\n+            raise serializers.ValidationError({\"A collection with this position already exists.\"})\n+        return data\n\\ No newline at end of file\n"
                }
            ],
            "date": 1729852922608,
            "name": "Commit-0",
            "content": "from rest_framework import serializers\nfrom ..models import ProjectService\n\nclass ProjectServiceListSerializers(serializers.ModelSerializer):\n    class Meta:\n        model = ProjectService\n        fields = '__all__'\n\nclass ProjectServiceRetrieveSerializers(serializers.ModelSerializer):\n    class Meta:\n        model = ProjectService\n        fields = '__all__'\n\nclass ProjectServiceWriteSerializers(serializers.ModelSerializer):\n    class Meta:\n        model = ProjectService\n        fields = '__all__'\n    "
        }
    ]
}