{
    "sourceFile": "inquires/viewsets/inquires_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1730099662556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730099670869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     serializer_class = InquiresListSerializers\n     # permission_classes = [inquiresPermission]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n-    queryset = Inquires.objects.all().order_by\n+    queryset = Inquires.objects.all().order_by('created_at')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n"
                },
                {
                    "date": 1730099683249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n+    \n \n     # filterset_fields = {\n     #     'id': ['exact'],\n     # }\n"
                },
                {
                    "date": 1730099711316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,11 +12,11 @@\n     pagination_class = MyPageNumberPagination\n     queryset = Inquires.objects.all().order_by('created_at')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id']\n+    search_fields = ['id','project_service', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n     ordering_fields = ['id']\n-    \n+    # ('project_service', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at', )\n \n     # filterset_fields = {\n     #     'id': ['exact'],\n     # }\n"
                },
                {
                    "date": 1730099720583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,10 @@\n     pagination_class = MyPageNumberPagination\n     queryset = Inquires.objects.all().order_by('created_at')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','project_service', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n-    ordering_fields = ['id']\n+    search_fields = ['id','project_service__', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n+    ordering_fields = ['id','project_service', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n     # ('project_service', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at', )\n \n     # filterset_fields = {\n     #     'id': ['exact'],\n"
                },
                {
                    "date": 1730099750385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     pagination_class = MyPageNumberPagination\n     queryset = Inquires.objects.all().order_by('created_at')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','project_service__', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n+    search_fields = ['id','project_service__name', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n     ordering_fields = ['id','project_service', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n     # ('project_service', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at', )\n \n     # filterset_fields = {\n"
                },
                {
                    "date": 1730099771061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     queryset = Inquires.objects.all().order_by('created_at')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','project_service__name', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n-    ordering_fields = ['id','project_service', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n+    ordering_fields = ['id', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n     # ('project_service', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at', )\n \n     # filterset_fields = {\n     #     'id': ['exact'],\n"
                },
                {
                    "date": 1730099780141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     queryset = Inquires.objects.all().order_by('created_at')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','project_service__name', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n-    ordering_fields = ['id', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n+    ordering_fields = ['id', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'created_at', 'updated_at',]\n     # ('project_service', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at', )\n \n     # filterset_fields = {\n     #     'id': ['exact'],\n"
                },
                {
                    "date": 1730099795647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,11 @@\n     search_fields = ['id','project_service__name', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n     ordering_fields = ['id', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'created_at', 'updated_at',]\n     # ('project_service', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at', )\n \n-    # filterset_fields = {\n-    #     'id': ['exact'],\n-    # }\n+    filterset_fields = {\n+        'id': ['exact'],\n+    }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n"
                },
                {
                    "date": 1730099952466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,11 @@\n     search_fields = ['id','project_service__name', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n     ordering_fields = ['id', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'created_at', 'updated_at',]\n     # ('project_service', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at', )\n \n-    filterset_fields = {\n+   filterset_fields = {\n         'id': ['exact'],\n-    }\n+    } \n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n"
                },
                {
                    "date": 1730099958100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,13 +15,10 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','project_service__name', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n     ordering_fields = ['id', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'created_at', 'updated_at',]\n     # ('project_service', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at', )\n+    \n \n-   filterset_fields = {\n-        'id': ['exact'],\n-    } \n-\n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n         #return queryset.filter(user_id=self.request.user.id)\n"
                },
                {
                    "date": 1730099980531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import Inquires\n from ..serializers.inquires_serializers import InquiresListSerializers, InquiresRetrieveSerializers, InquiresWriteSerializers\n from ..utilities.importbase import *\n+from \n \n class inquiresViewsets(viewsets.ModelViewSet):\n     serializer_class = InquiresListSerializers\n     # permission_classes = [inquiresPermission]\n@@ -15,9 +16,9 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','project_service__name', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at',]\n     ordering_fields = ['id', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'created_at', 'updated_at',]\n     # ('project_service', 'project_plan', 'first_name', 'last_name', 'email_address', 'phone_number', 'company_name', 'project_detail', 'created_at', 'updated_at', )\n-    \n+    filterset_class = InquiresFilter\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n"
                },
                {
                    "date": 1730099989761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import Inquires\n from ..serializers.inquires_serializers import InquiresListSerializers, InquiresRetrieveSerializers, InquiresWriteSerializers\n from ..utilities.importbase import *\n-from \n+from ..utilities.inquires_filter\n \n class inquiresViewsets(viewsets.ModelViewSet):\n     serializer_class = InquiresListSerializers\n     # permission_classes = [inquiresPermission]\n"
                },
                {
                    "date": 1730099995483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import Inquires\n from ..serializers.inquires_serializers import InquiresListSerializers, InquiresRetrieveSerializers, InquiresWriteSerializers\n from ..utilities.importbase import *\n-from ..utilities.inquires_filter\n+from ..utilities.inquires_filter import InquiresFilter\n \n class inquiresViewsets(viewsets.ModelViewSet):\n     serializer_class = InquiresListSerializers\n     # permission_classes = [inquiresPermission]\n"
                }
            ],
            "date": 1730099662556,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import Inquires\nfrom ..serializers.inquires_serializers import InquiresListSerializers, InquiresRetrieveSerializers, InquiresWriteSerializers\nfrom ..utilities.importbase import *\n\nclass inquiresViewsets(viewsets.ModelViewSet):\n    serializer_class = InquiresListSerializers\n    # permission_classes = [inquiresPermission]\n    # authentication_classes = [JWTAuthentication]\n    pagination_class = MyPageNumberPagination\n    queryset = Inquires.objects.all().order_by\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id']\n    ordering_fields = ['id']\n\n    # filterset_fields = {\n    #     'id': ['exact'],\n    # }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        return queryset\n        #return queryset.filter(user_id=self.request.user.id)\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return InquiresWriteSerializers\n        elif self.action == 'retrieve':\n            return InquiresRetrieveSerializers\n        return super().get_serializer_class()\n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}