{
    "sourceFile": "inquires/serializers/inquires_serializers.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1730099597450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730100495733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,73 @@\n-# from rest_framework import serializers\n-# from ..models import Inquires\n+from rest_framework import serializers\n+from ..models import Inquires\n+from projects.models import ProjectService\n+from plan.models import Plan\n \n-# class InquiresListSerializers(serializers.ModelSerializer):\n-#     class Meta:\n-#         model = Inquires\n-#         fields = '__all__'\n+# Serializer for ProjectService\n+class ProjectServiceSerializer(serializers.ModelSerializer):\n+    class Meta:\n+        model = ProjectService\n+        fields = ['id', 'name']  # Adjust fields as per your model\n \n\\ No newline at end of file\n-# class InquiresRetrieveSerializers(serializers.ModelSerializer):\n-#     class Meta:\n-#         model = Inquires\n-#         fields = '__all__'\n+# Serializer for Plan\n+class PlanSerializer(serializers.ModelSerializer):\n+    class Meta:\n+        model = Plan\n+        fields = ['id', 'name']  # Adjust fields as per your model\n \n-# class InquiresWriteSerializers(serializers.ModelSerializer):\n-#     class Meta:\n-#         model = Inquires\n-#         fields = '__all__'\n+# List Serializer\n+class InquiresListSerializers(serializers.ModelSerializer):\n+    project_service = ProjectServiceSerializer(many=True, read_only=True)\n+    project_plan = PlanSerializer(read_only=True)\n+\n+    class Meta:\n+        model = Inquires\n+        fields = [\n+            'id', 'first_name', 'last_name', 'email_address', \n+            'phone_number', 'company_name', 'created_at', 'updated_at', \n+            'project_service', 'project_plan'\n+        ]\n+\n+# Retrieve Serializer\n+class InquiresRetrieveSerializer(serializers.ModelSerializer):\n+    project_service = ProjectServiceSerializer(many=True, read_only=True)\n+    project_plan = PlanSerializer(read_only=True)\n+\n+    class Meta:\n+        model = Inquires\n+        fields = [\n+            'id', 'first_name', 'last_name', 'email_address', \n+            'phone_number', 'company_name', 'project_detail',\n+            'created_at', 'updated_at', 'project_service', 'project_plan'\n+        ]\n+\n+# Write Serializer\n+class InquiresWriteSerializer(serializers.ModelSerializer):\n+    project_service = serializers.PrimaryKeyRelatedField(\n+        queryset=ProjectService.objects.all(), many=True\n+    )\n+    project_plan = serializers.PrimaryKeyRelatedField(\n+        queryset=Plan.objects.all(), allow_null=True\n+    )\n+\n+    class Meta:\n+        model = Inquires\n+        fields = [\n+            'id', 'first_name', 'last_name', 'email_address', \n+            'phone_number', 'company_name', 'project_detail', \n+            'project_service', 'project_plan'\n+        ]\n+\n+    def create(self, validated_data):\n+        project_services = validated_data.pop('project_service', [])\n+        inquires = Inquires.objects.create(**validated_data)\n+        inquires.project_service.set(project_services)\n+        return inquires\n+\n+    def update(self, instance, validated_data):\n+        project_services = validated_data.pop('project_service', [])\n+        for attr, value in validated_data.items():\n+            setattr(instance, attr, value)\n+        instance.save()\n+        instance.project_service.set(project_services)\n+        return instance\n"
                },
                {
                    "date": 1730100502346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'project_service', 'project_plan'\n         ]\n \n # Retrieve Serializer\n-class InquiresRetrieveSerializer(serializers.ModelSerializer):\n+class InquiresRetrieveSerializers(serializers.ModelSerializer):\n     project_service = ProjectServiceSerializer(many=True, read_only=True)\n     project_plan = PlanSerializer(read_only=True)\n \n     class Meta:\n@@ -69,5 +69,5 @@\n         for attr, value in validated_data.items():\n             setattr(instance, attr, value)\n         instance.save()\n         instance.project_service.set(project_services)\n-        return instance\n\\ No newline at end of file\n+        return instance\n"
                },
                {
                    "date": 1730100599730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n # Serializer for Plan\n class PlanSerializer(serializers.ModelSerializer):\n     class Meta:\n         model = Plan\n-        fields = ['id', 'name']  # Adjust fields as per your model\n+        fields = '__all__' # Adjust fields as per your model\n \n # List Serializer\n class InquiresListSerializers(serializers.ModelSerializer):\n     project_service = ProjectServiceSerializer(many=True, read_only=True)\n@@ -41,9 +41,9 @@\n             'created_at', 'updated_at', 'project_service', 'project_plan'\n         ]\n \n # Write Serializer\n-class InquiresWriteSerializer(serializers.ModelSerializer):\n+class InquiresWriteSerializers(serializers.ModelSerializer):\n     project_service = serializers.PrimaryKeyRelatedField(\n         queryset=ProjectService.objects.all(), many=True\n     )\n     project_plan = serializers.PrimaryKeyRelatedField(\n"
                },
                {
                    "date": 1730100606873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,15 +6,14 @@\n # Serializer for ProjectService\n class ProjectServiceSerializer(serializers.ModelSerializer):\n     class Meta:\n         model = ProjectService\n-        fields = ['id', 'name']  # Adjust fields as per your model\n-\n+        fields = ['id', 'name'] \n # Serializer for Plan\n class PlanSerializer(serializers.ModelSerializer):\n     class Meta:\n         model = Plan\n-        fields = '__all__' # Adjust fields as per your model\n+        fields = '__all__' \n \n # List Serializer\n class InquiresListSerializers(serializers.ModelSerializer):\n     project_service = ProjectServiceSerializer(many=True, read_only=True)\n"
                },
                {
                    "date": 1730100613906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n # Serializer for ProjectService\n class ProjectServiceSerializer(serializers.ModelSerializer):\n     class Meta:\n         model = ProjectService\n-        fields = ['id', 'name'] \n+        fields = '__all__' \n # Serializer for Plan\n class PlanSerializer(serializers.ModelSerializer):\n     class Meta:\n         model = Plan\n"
                }
            ],
            "date": 1730099597450,
            "name": "Commit-0",
            "content": "# from rest_framework import serializers\n# from ..models import Inquires\n\n# class InquiresListSerializers(serializers.ModelSerializer):\n#     class Meta:\n#         model = Inquires\n#         fields = '__all__'\n\n# class InquiresRetrieveSerializers(serializers.ModelSerializer):\n#     class Meta:\n#         model = Inquires\n#         fields = '__all__'\n\n# class InquiresWriteSerializers(serializers.ModelSerializer):\n#     class Meta:\n#         model = Inquires\n#         fields = '__all__'"
        }
    ]
}